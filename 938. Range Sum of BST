/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int rangeSumBST(TreeNode* root, int low, int high) {
        int sum = 0;
        queue<TreeNode*>q;

        q.push(root);

        while(!q.empty())
        {
            auto front = q.front();
            if(front->val <= high and front->val >= low)
            sum += front->val;
            q.pop();
          //  cout<<"popping: "<<front->val<<endl;
            if(front->left)
            q.push(front->left);
            if(front->right)
            q.push(front->right);
        }

        return sum;

        
    }
};
