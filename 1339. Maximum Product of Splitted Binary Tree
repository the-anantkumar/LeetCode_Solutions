/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    long long ans = 0, totalSum = 0, mod = 1e9 + 7;

    long long solve(TreeNode* root)
    {
        if(not root) return 0;
        totalSum += root->val;
        return root->val += solve(root->left) + solve(root->right);
    }

    void solve2(TreeNode* root)
    {
        if(not root) return ;
        long long answer = 0ll;
        if(root->left)
        {
            answer = max(answer, (totalSum - root->left->val) * root->left->val);
            ans = max(ans, answer);
        }

        if(root->right)
        {
            answer = max(answer, (totalSum - root->right->val) * root->right->val);
            ans = max(answer, ans);
        }

        solve2(root->left);
        solve2(root->right);

    }
    long long maxProduct(TreeNode* root) {
      solve(root);
      solve2(root);
      return ans%mod;  
    }
};
